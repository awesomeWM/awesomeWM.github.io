commit 2321b0b6c56fff2f6ac019820770fb952e1d1dc1
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Mar 29 18:17:20 2014 +0100

    change codename
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit cea6b92aeaed6965c71a07397041234277085447
Author: Daniel Hahler <git@thequod.de>
Date:   Mon Mar 24 01:17:54 2014 +0100

    Fix the call to tag.history.restore from tag.delete
    
    By default, tag.history.restore switches between the previous history
    states, which is not what should get done when deleting a tag.
    
    Without this, deleting multiple tags in a row, will jump back to the
    first/fallback tag, instead of the older history entries.

commit 51f1308ebb1c48a9bd7e9278d214eae5c78a94b8
Author: Daniel Hahler <git@thequod.de>
Date:   Fri Mar 28 15:17:41 2014 +0100

    Add and improve some comments to awesomerc.lua

commit f12ba8fec0662c431e899e96b4e7d0e4b5693e81
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 28 13:15:24 2014 +0100

    Ignore enter/leave events when unmanaging a window (FS#1239)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 9c69e857edb6690fe5a496e82ec57a0bbae36702
Author: Emmanuel Lepage Vallee <elv1313@gmail.com>
Date:   Wed Mar 26 17:59:33 2014 -0400

    Fix tag screen switching
    
    The bugs this fix are:
    
     * Invalid request using nil as screen
     * Stop messing indexes in the old screen
     * Prevent c.screen <-> t.screen mismatch
     * Prevent no tags being selected in the old screen

commit 7852bfb22d9060817a8d1b7e4d26be5af091eb22
Author: Uli Schlachter <psychon@znc.in>
Date:   Wed Mar 26 14:29:02 2014 +0100

    awful.tag.withcurrent: Try harder at finding a tag (FS#1196)
    
    When a screen doesn't have any tags selected, then just tag the new client with
    all of the screen's tags. That way, we don't lose clients.
    
    Also, if we failed at coming up with tags for a client, don't completely untag
    it. This means that it can keep its old tags if it had any.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 0b5fa183d158ad2efa90779d4f562f109356d932
Author: Uli Schlachter <psychon@znc.in>
Date:   Wed Mar 26 14:28:04 2014 +0100

    Revert "awful.client.movetoscreen: Don't untag clients completely (FS#1196)"
    
    This reverts commit bbe86e4e256d20c7aa94a28f7fdc838d5a0abd4e. That commit caused
    unintuitive, special behavior. Instead, when someone wants us to set a screen,
    we really should do so.

commit b5d6c4eb0d871e86582de53b95d1f45642a3e548
Author: Daniel Hahler <git@thequod.de>
Date:   Mon Mar 24 00:18:35 2014 +0100

    Set c.screen in ewmh.tag and before tags in rules.execute
    
    The current premise is that c.screen should be the same as
    awful.tag.getscreen(t).
    
    The addition in `ewmh.tag` appears to be the important part here,
    changing the order in awful.rules.execute is (maybe) only for
    consistency across the codebase.

commit a39a38bf5f142b459b6d5b45c303b58e37bb32f3
Author: Daniel Hahler <git@thequod.de>
Date:   Fri Mar 14 22:30:51 2014 +0100

    Drop focus:raise() in magnifier.arrange
    
    This is a useful fix in general, but especially after commit 620732a
    (Remove raise call from mouse.client.move).
    
    Ref: https://github.com/awesomeWM/awesome/pull/9#issuecomment-37736135

commit d8909a947c596f658d7c36614b659775b748409c
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 24 09:49:44 2014 +0100

    Revert "Set c.screen in ewmh.tag and before tags in rules.execute"
    
    This reverts commit 6280998306f31064db50a21eac98d193901c546e.

commit 812683e48c748d1e4e57b0725a8f2b24f90d5ff1
Author: Daniel Hahler <git@thequod.de>
Date:   Mon Mar 24 01:10:45 2014 +0100

    Expand '~' in the path for beautiful.init
    
    This expands the tilde in the path to beautiful.init and changes the
    expansion in theme values to only match '^~/': tilde expansion is only
    meant to be expanded at the beginning.
    
    The latter is not really tested.

commit 6280998306f31064db50a21eac98d193901c546e
Author: Daniel Hahler <git@thequod.de>
Date:   Mon Mar 24 00:18:35 2014 +0100

    Set c.screen in ewmh.tag and before tags in rules.execute
    
    The current premise is that c.screen should be the same as
    awful.tag.getscreen(t).
    
    The addition in `ewmh.tag` appears to be the important part here,
    changing the order in awful.rules.execute is (maybe) only for
    consistency across the codebase.

commit a73e6c2bd7d289764bf24d1d0b935edd4a7825ee
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 22:41:49 2014 +0100

    drawin: Correctly add property::shape_* signals
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 482efb83145663f569ce611628b213454497fa03
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 21:51:29 2014 +0100

    gears.color.create_opaque_pattern: Fix for SurfacePatterns (FS#1236)
    
    Sorry!
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 8affa3bc024484bf2b54709ddc83df3d9eaaed3b
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 19:29:53 2014 +0100

    beautiful: Don't use non-existant API
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 9d8d4775fd32a112f08a086767091b9d390c9d7f
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 19:29:04 2014 +0100

    awesome.startup_errors: Never emit debug::index::miss
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 53c19edae6b557299540b318ab41f0df0e32e8f4
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 19:09:11 2014 +0100

    Make debug::index::miss and newindex work on classes and all objects
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b47b0062f8b934cdca71e0571d95118215619f8a
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 18:34:38 2014 +0100

    rc.lua: Raise all clients by default (regression, FS#1234)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit c7e32429b89d68160859b2e1f94e46e7e14a58a7
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 18:23:38 2014 +0100

    xproperty: Emit on "awesome" for root window properties
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit ec484b700abeabe199c80817dc92c5eb0c70ad59
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 18:15:03 2014 +0100

    awesome: Add get_* and set_xproperty
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b57b19b831851b44b2dab45e12325cd7eb0fd8b4
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 18:09:32 2014 +0100

    window: Factor out helper functions for xproperties
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 7e21f85c3ca7faef2f2eb60d4f87658907562af1
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 17:48:26 2014 +0100

    wibox.layout.base.fit_widget: Enforce sane width and height
    
    Previously, odd things could happen if a widget was getting fitted into a
    negative width or, even worse, width being NaN (not a number)!
    
    This can e.g. happen due to a margin layout which doesn't get enough space to
    even draw the margin that it is supposed to add.
    
    Fix this by enforcing a minimum value of 0 for the width and height that a
    widget gets fitted into.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 8003156e62530cea98dc0d4bf3798ecdad66642a
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 17:39:42 2014 +0100

    imagebox: Avoid division by zero
    
    Given an imagebox i with i.resize_forbidden = false and a valid image set, the
    call t:fit(0, 0) would return two times "not a number".
    
    This is because the code first does some calculations to get the input image
    into the available space and then tried to do some calculations needed for
    scaling images up.
    
    The first calculation already gave us h == 0 == w, the second calculation would
    then calculate 0/0. This results in NaNs.
    
    This was only noticed because NaN is not a valid table index in lua.
    
    Fix this by returning 0,0 if we have an image of width or height 0 after the
    first calculation. Since 0x0 images are valid in cairo, this also fixes the same
    bug with such images.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 23432cfaeb303cc99c1b7d5972a9803739fdab07
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 23 16:34:04 2014 +0100

    awful.client: Add marked and unmarked signals (FS#1227)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit adc2e23703f587d0b181032323d4d281b148e359
Author: Uli Schlachter <psychon@znc.in>
Date:   Tue Mar 18 16:28:42 2014 +0100

    luaa: Remove lots of unused code
    
    Most of these are unused since the drawing code was moved to lua. For example,
    the old wibox code needed the metatable entries __next, __ipairs and __pairs so
    that w.widgets worked correctly and could pretend to be a regular lua table.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b693f1186c30c2c6ac323fd0cf9517fc392aedec
Author: Uli Schlachter <psychon@znc.in>
Date:   Tue Mar 18 16:01:04 2014 +0100

    awful.rules: Emit request::activate on the client
    
    There is a strong hint that you are doing something wrong: You call
    client.emit_signal(some_signal, c). Chances are high that this signal is
    supposed to be emitted on the client object 'c' instead of the underlying client
    class.
    
    This applies to awful.rules' usage of this signal.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 0dcbde2018e22323492d48ac9d7db39ab3e9a9df
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 17:52:09 2014 +0100

    Bump minimum lgi dependency to 0.7.0
    
    Before commit 1b2826 in lgi, the get_rgba() function on cairo SolidPatterns was
    specified like this:
    
        get_rgba = { ret = cairo.Status,
                     { ti.double, dir = 'out' },
                     { ti.double, dir = 'out' },
                     { ti.double, dir = 'out' } },
    
    The above commit fixed this (without saying so) and the code became:
    
        get_rgba = { ret = cairo.Status,
                     { ti.double, dir = 'out' },
                     { ti.double, dir = 'out' },
                     { ti.double, dir = 'out' },
                     { ti.double, dir = 'out' } },
    
    The prototype for the corresponding cairo function is:
    
    cairo_public cairo_status_t
    cairo_pattern_get_rgba (cairo_pattern_t *pattern,
                            double *red, double *green,
                            double *blue, double *alpha);
    
    As you see, this functions gets four double* as arguments and it will save its
    result via those pointers. Old versions of lgi call this function with too few
    arguments and this will cause a segmentation fault when cairo dereferences an
    invalid pointer.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 7743396bc62a8542d00ad33ab7239425af04c1b1
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 16:34:35 2014 +0100

    Fixup indentation
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit e2a6d7261146fe5c6eb23760f20bf8dd2bb673db
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 16:27:10 2014 +0100

    Drawable: Ignore exposes when we have nothing to draw
    
    The X11 server tells us about things that need to be redrawn via expose events.
    When we get such an expose event before lua drew the drawable, we just fill the
    exposed area with old data (which is black for newly-created drawables).
    
    Fix this by tracking if we have any usable data in a drawable's double buffering
    pixmap. This flag is unset whenever we throw away the old content (e.g. due to a
    resize) and is set when lua gave us some new content to display.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 3e1f4ff02fbc145ef28c6ffa11c688b3a9f93838
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 16:15:20 2014 +0100

    EWMH: Handle _NET_WM_DESKTOP in lua
    
    We now handle all "important" EWMH messages in lua and lua can decide to do
    different things than the current obvious one.
    
    Consistency!
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 0c7901394dd5171570ababf7699fd6935c8a353d
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 15:38:20 2014 +0100

    ewmh: Use client_set_sticky() for making clients sticky
    
    We can't just directly assign c->sticky directly, because we should emit the
    right signals and unban the client if it is currently ban. All of that gets
    handled by client_set_sticky().
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b8271845e33b69bf7a6903df0d171398c02b1b41
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 15:34:44 2014 +0100

    EWMH: Ignore invalid _NET_WM_DESKTOP
    
    Commit e291c0398 already made awesome ignore invalid values for _NET_WM_DESKTOP.
    That commit just made it tag clients with the first tag if they used an invalid
    value for this property.
    
    This commit reverts 90% of that change. What is still left is the range
    validation. Previously, awesome would untag a client completely when it got such
    a _NET_WM_DESKTOP property / message. Now, such messages are just silently
    ignored.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 2c434de6f2501ecd4193c91febeb9e0bb8efb8f5
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Mar 17 15:33:28 2014 +0100

    ewmh: Factor out common code into a helper function
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b61fa0ac15e24e55209d2c03a017c1d3d825dd54
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 21:53:58 2014 +0100

    awful.client.movetoscreen: Don't untag clients completely (FS#1196)
    
    If a client gets moved to a screen without any selected tags, that client
    disappears and it is non-trivial to get it back. Since this is unexpected and
    annoying, make movetoscreen do nothing if the target screen has no tags
    selected.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit e5dcb14f3d239417e7d26e397dac667ca2b9d74e
Author: Daniel Hahler <git@thequod.de>
Date:   Sun Mar 16 20:47:37 2014 +0100

    Only set client's urgent after startup
    
    This looks at awesome.startup in the default 'request::activate' signal
    handler.

commit 166cedc936529d27ff16042e71cc3bc551efb77d
Author: Daniel Hahler <git@thequod.de>
Date:   Sun Mar 16 01:45:31 2014 +0100

    Factor `awful.rules.apply_do` out of `apply`
    
    This allows to apply properties and callbacks to a client like
    awful.rules.apply would do, without the matching part.
    
    This is useful with the new startup notifications, and lets you apply
    the same properties and callbacks from e.g. a manage signal handler.

commit c46d43faf0b4fb498318fd1431de6da069f232d5
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 20:09:43 2014 +0100

    Add awesome.startup
    
    This boolean describes if we are still in startup or if our main loop is already
    running.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 05ece8c778ff1af7a9b122186cf219a8f9e79630
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 17:22:27 2014 +0100

    root: Make sure cairo doesn't cache our temporary connection
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 22cdd9d923fc2a2a35c31b7b0ee462b08d7ea0e1
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 17:08:36 2014 +0100

    drawable: Add pixmap member
    
    Previously, ownership of the pixmaps that we are using for double buffering was
    a little weird. The pixmap belonged to the drawin/titlebar, but the
    corresponding cairo surface was owned by the drawable. Clean this up by moving
    the pixmap to the drawable.
    
    This cleans up lots of ugly code and also fixes a crash: When a drawable was
    garbage collected before its drawin, drawin_wipe() would crash accessing the
    drawable. This was needed to make it forget about the cairo surface we gave to
    it for the pixmap that is being destroyed.
    
    By moving the pixmap to the drawable, this whole issues goes away.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 5cd36531631c184d984f17c802a94965c41ec78a
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 16:05:09 2014 +0100

    Fix cairo surface memory leak
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit d397d2d6849f74080f38b4fdcb8c4632bf394f97
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 15:29:11 2014 +0100

    Redraw titlebars more intelligently
    
    Whenever a titlebar of a client needed to be refreshed, all (possibly) four
    titlebars would get completely refreshed. So if someone actually added more than
    one titlebar to a client, awesome would copy each titlebar's content to the
    window four times. Fix this by introducing more fine-grined functions for
    uploads.
    
    This also makes awesome only update the affected area when it gets an expose
    event for a titlebar instead of all four titlebars completely.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 9770986b6fbeccefcca921a7470ada5b9ea3fca6
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 14:58:14 2014 +0100

    drawin: Only redraw on move with translucent background
    
    If a drawable has an opaque background, we don't need pseudo transparency and
    thus its content don't change when it is moved. However, when we need pseudo
    transparency, then we have to redraw the drawable to apply the new background.
    
    Previously we just always did the redraw. This commit adds a helper function
    gears.color.create_opaque_pattern() that analyzes a cairo pattern for
    transparency. We use this new function to only redraw-on-move when there is
    actual pseudo transparency in effect. Otherwise, this redraw can be skipped.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 5b4666432f60028bda51eddca52c43cfa2dd89b9
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 13:25:01 2014 +0100

    awful.tooltip: Work with all gears.colors as foreground
    
    This fixes awful.tooltip so that colors other than "#123456" can be used.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit c816ad7b6318e73b841ee3207ac3df828655abc9
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 09:11:00 2014 +0100

    drawin: Don't unconditionally redraw when made visible
    
    Before this commit, we always threw away the drawin's cairo surface whenever it
    was made visible and thus forced a redraw.
    
    This commit changes this so that we only force a redraw if the drawin was
    resized why it wasn't visible. To remember when this happens, we free the
    drawin's cairo surface without allocating a new one when the drawin is resized
    while not being visible. Thus, we then only have to allocate a new surface if
    the drawin doesn't have one when it is being made visible.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit d6bfec84add9aa6a19a9e3013530fe3291bec503
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 16 08:56:55 2014 +0100

    drawin: Inline drawin_init() into its only caller
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 061751dd9d3a3f08e4efa1739adb4f93e73bee98
Author: Emmanuel Lepage Vallee <elv1313@gmail.com>
Date:   Sat Mar 15 18:09:33 2014 -0400

    Add end to end support for spawning tracking using startup notifications
    
    This allow to spawn something, then apply some properties or rules when
    the client show up ("manage").
    
    This commit add:
     * "startup_id" property for all clients object (immutable, can be nil)
     * Second return value to awful.util.spawn() with the startup_id
     * Update the documentation
    
    Example:
    
      local wait_for_it = {}
    
      local pid,snid = awful.util.spawn("urxvtc")
      wait_for_it[snid] = {ontop=true,sticky=false,
         tag = awful.tag.gettags(mouse.screen)[1] }
    
      client.connect_signal("manage", function (c, startup)
         if c.startup_id and wait_for_it[c.startup_id] then
            for k,v in pairs(wait_for_it[c.startup_id]) do
               c[k] = v
            end
            if wait_for_it[c.startup_id].tag then
               c:tags({wait_for_it[c.startup_id].tag})
            end
         end
      end)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit adbc7ac0c3288ac0125ab67a6e0f2a55b3f30ac4
Author: Daniel Hahler <git@thequod.de>
Date:   Sun Mar 9 22:03:32 2014 +0100

    awful.rules: add does_match and matching_rules functions (FS#1224)
    
    Signed-off-by: Daniel Hahler <git@thequod.de>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit ed69ed9529da8cf5d94d9bb62c989f5efb58029c
Author: Daniel Hahler <git@thequod.de>
Date:   Sat Mar 15 02:56:58 2014 +0100

    Minor doc fixes

commit bca0b546d3b00a7b1dae545341866bf4df25b620
Author: Daniel Hahler <git@thequod.de>
Date:   Fri Mar 14 04:14:03 2014 +0100

    Add client.maximized (a shortcut for ~_horizontal and ~_vertical)
    
    This also adds the signals `property::maximized`.
    
    Signed-off-by: Daniel Hahler <git@thequod.de>

commit c07b662042a3ccf425715c955268c031af38bcd3
Author: Daniel Hahler <git@thequod.de>
Date:   Fri Mar 14 17:21:11 2014 +0100

    Fallback to comparing layout names in awful.layout.inc
    
    This helps in cases where you have accidentally cloned an entry from
    `layouts`.
    
    Previously, no current index would be found and the function would
    silently fail.
    
    Signed-off-by: Daniel Hahler <git@thequod.de>

commit 926dd348e437ca1a174d53c215dc1f1aa2af19ca
Author: Daniel Hahler <git@thequod.de>
Date:   Fri Mar 14 17:10:24 2014 +0100

    Add a "deep" option to awful.util.table.clone
    
    This allows for having clones of a table, where its entries are still
    references to the original values.
    
    This is useful for copying a "default props" table, where you want to
    keep the reference to entries like `awful.layout.suit.tile`.
    
    Signed-off-by: Daniel Hahler <git@thequod.de>

commit c855b1babb0b2e8c171e16ea6f40da668d98a372
Author: Daniel Hahler <git@thequod.de>
Date:   Sat Mar 8 03:35:35 2014 +0100

    Do not raise clients in client_manage
    
    Instead, use stack_client_push and emit the `request::activate` signal
    from awful.rules.apply, if the client gets focus.
    
    Signed-off-by: Daniel Hahler <git@thequod.de>

commit f9a1093e45bb249a6c6a988c497248bf3051b6b3
Author: Uli Schlachter <psychon@znc.in>
Date:   Wed Mar 12 11:15:40 2014 +0100

    spawn: Remove useless argv[0] calculation
    
    Since commit 3c40d6b, the passed in argument is decomposed into an array of
    strings before the sn-related code runs. This means we already know argv[0] and
    thus we don't need the code here that tries to figure it out again.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 5432e0a332c61abcfee8c08efab07ebf793f29c7
Author: Uli Schlachter <psychon@znc.in>
Date:   Wed Mar 12 11:12:23 2014 +0100

    awesome.spawn(): Check table arguments better
    
    Previously, any not-string-convertible entry in the array argument would result
    in lua_tostring() returning NULL which g_strdup() would pass through. Thus, we
    would end up with a NULL entry in an array whose end is marked with a NULL
    entry. This mainly means that we had a memory leak.
    
    Fix this by actually verifying that we only have strings in the table that we
    are looking at.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 800a9a41f6b705612ebe1d42246e05b77fbd281d
Author: Uli Schlachter <psychon@znc.in>
Date:   Wed Mar 12 11:10:48 2014 +0100

    spawn: Don't try to spawn with empty argv (FS#1225)
    
    When e.g. calling awesome.spawn({}), our argv array would be empty, so just a
    pointer to a NULL pointer that marks the end of the array.
    
    Since startup notification was enabled, this would then try to figure out the
    name of the started binary. This would immediately dereference a NULL pointer
    and crash.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b965adc33f10538fd621d874faff244001c6baf4
Author: Massimiliano Brocchini <massimiliano.brocchini@gmail.com>
Date:   Sun Mar 9 15:18:56 2014 +0100

    prompt: CTRL+DELETE deletes history entries
    
    Pressing CTRL+DELETE removes the visible history entry, if any, then moves to the next history entry (like pressing DOWN would do).
    If the last history entry is removed the previous one is shown in the prompt (like pressing UP would do).
    CTRL+DELETE works on history entries only: i.e. it has no effect on a command entered but not executed yet.
    To implement above behaviour I added saving history table to file on Escape key press.
    
    Signed-off-by: Massimiliano Brocchini <massimiliano.brocchini@gmail.com>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 620732a0158843acd8cd29bac09ff02ee11d5679
Author: Campbell Barton <ideasman42@gmail.com>
Date:   Tue Mar 11 19:37:40 2014 +1100

    Remove raise call from mouse.client.move
    
    This makes move consistent with 'resize' which doesn't raise either.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 642ab359888756ea598369eb8cec451072f1b80c
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Mar 9 20:22:44 2014 +0100

    xproperty: Don't limit property lengths
    
    All that I can say is "oops, I blame copy&paste".
    
    Thanks to Elv13 for noticing this.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 2ac95b4ae8b7a4ade54810eec1f2802dc8171730
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Mar 8 15:33:34 2014 +0100

    Fix handling of _NET_CURRENT_DESKTOP messages (FS#1219,FS#1217)
    
    Instead of having the C code mess with which tags are selected, we now emit a
    signal on the tag that says that something requested it to be selected. Lua can
    then handle this by only switching tags on the correct monitor and by updating
    the focus history correctly.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 1b21dce46c49f5cbe4f34d6461c5f897d18f59ac
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 16:21:11 2014 +0100

    Revert "client: Add c.blob property"
    
    This reverts commit a54636751bef17ad6bbde266ab1d35ad0ad36c0d.
    
    We now have the new xproperty API which does the same thing in a much nicer way.
    Thanks to Elv13 for the idea!
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 62e2dee4ba01d85aedacc5438da6d3403f42b1ef
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 13:49:24 2014 +0100

    Add awesome.register_xproperty (FS#1212)
    
    This commits adds awesome.register_xproperty(). This allows lua code to register
    arbitrary X11 properties with awesome which will then watch these properties.
    Whenever such a property is changed on a client or drawin, we will emit the
    xproperty::name signal.
    
    This also adds window:get_xproperty(name) and window:set_xproperty(name, value)
    which allows to mess with properties.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 2b1febeabe90dc829db082517884dc2c6691d696
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 14:38:28 2014 +0100

    Make objects properly inherit signals from classes
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit f19912900d877dd5b0f423b057f2e6271888a484
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 10:54:52 2014 +0100

    awful.util.spawn*: Remove obsolete screen argument
    
    Ever since commit 6b2e4352b (from 2010!), awesome.spawn() doesn't have a screen
    argument anymore and the extra argument from util.spawn was just ignored. Fix
    the code and the luadoc for these functions.
    
    Thanks to blueyed for noticing this.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 202567dc12618dd1b7900c6d8c4c829dc4ece130
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 10:51:39 2014 +0100

    Improve fatal signal handling
    
    First, we reset the signal handler back to the default one when a fatal signal
    is received. This should make sure that we never get into an endless loop where
    the signal handler causes the signal to happen again.
    
    Then this commit also makes awesome print a backtrace on more signals than
    before. Crashing with a backtrace is always better than without. ;-)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 4717e89984378ebbf43def1ba929095154cdbf57
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 10:44:48 2014 +0100

    Update fields for capi.awesome in C comment
    
    This should have been part of commit 2f39986, sorry!
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 9e9366950ed1795fdde4bfeedd1c77ad3c0f5db5
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Mar 7 10:39:49 2014 +0100

    Measure the time a main loop iteration takes
    
    This commit makes awesome measure how long all the event handling takes. That
    is, this measure the time between waking up from poll and going to sleep again.
    If that time is above 0.1 seconds, we print a warning and increase the limit for
    this warning to the last duration to avoid flooding messages.
    
    This should help figuring out cases were people do stupid things in their
    config, like synchronously contacting an IMAP server and getting the number of
    unread mails.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b6bbae084aca05f9ad30a0f4eaf7784007c8b65a
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 22:18:35 2014 +0100

    mouse.screen: Lie when we have no clue where the pointer is
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 8cf48d1fe84177ae9a3448379691ca0fc4bc9b90
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 22:08:00 2014 +0100

    Revert "awful.ewmh: Enforce client geometry (FS#764,FS#1216)"
    
    This reverts commit 20afb26080cd34691c67720fef396bed5a0be237.
    
    The commit caused endless loops with tracebacks like this (shortened):
    
            lib/awful/ewmh.lua.in:122: in function <lib/awful/ewmh.lua.in:117>
            [C]: in function 'geometry'
            lib/awful/ewmh.lua.in:122: in function <lib/awful/ewmh.lua.in:117>
            [C]: in function 'geometry'
            lib/awful/ewmh.lua.in:122: in function <lib/awful/ewmh.lua.in:117>
            [C]: in function 'geometry'

commit 069a8e84a2a218c7de69cf5492fa09ae931b7ad1
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 18:35:17 2014 +0100

    root.wallpaper: Cleanup and correctness fixes
    
    Turns out that my rant about "we can't query the pixmap's values" was wrong.
    This commit makes awesome use a GetGeometry request to get the properties of the
    (old) root window's back pixmap.
    
    This also converts code to p_delete() instead of free() for consistency. Bad me
    for doing multiple things in one commit...
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 20afb26080cd34691c67720fef396bed5a0be237
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 18:08:55 2014 +0100

    awful.ewmh: Enforce client geometry (FS#764,FS#1216)
    
    When a client's geometry changes (and I consider the border width to be part of
    the geometry here) and that client is one of fullscreen or
    maximized_{horizontally,vertically}, make sure that the geometry as specified by
    the state is still obeyed.
    
    This also (accidentally) fixes things when a client gets moved to another
    screen!
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 910cbe401d4fa59bdc7d1496a68338427fbcbf71
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 18:08:21 2014 +0100

    client: Emit property::screen after geometry
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 23e9258fb54429615aebc4d0e56cb146fdf48242
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 17:58:03 2014 +0100

    awful.ewmh: Correctly handle bw change for maximized clients
    
    Due to a copy&paste error, maximized_vertical and maximized_horizontal were
    handled the same. Of course, vertical and horizontal aren't the same direction.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 04dee81d135bf630368bd2c5aef126b3f7b35cd1
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Mar 6 17:47:55 2014 +0100

    client: Add request::activate signal (FS#848)
    
    When we receive a _NET_ACTIVE_WINDOW request on the root window, we used to just
    focus and raise the window. This didn't do much for clients which are on
    non-selected tags.
    
    Thus, this commit makes awesome emit request::activate on the client instead.
    This is used in awful.ewmh to implement the old behavior again, but with
    additionally marking the client as urgent if it isn't visible.
    
    People who don't like this behavior can use client.disconnect_signal to disable
    this behavior again. To make this really possible, awful.ewmh becomes a
    "non-nil" module.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 2f3998639edce0e7a0ffc1448688347ad78cb20d
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Mar 1 19:28:06 2014 +0100

    Update the luadoc for the C API
    
    Thanks to blueyed for noticing that awesome.font doesn't exist any more!
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 65a6febaf50d671a5f2d24e841646b46eb8b2620
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Mar 1 17:29:00 2014 +0100

    Improve the check for another window manager
    
    We detect other WMs when we fail to request SubstructureRedirect on the root
    window. Previously, the code used an unchecked request and then tried to
    cleverly detect if an error occurred. This isn't needed.
    
    Instead, we now use a checked request and use xcb_request_check() to see if any
    errors were generated. This also gets rid of a round-trip to the server (one is
    still implicitly done by xcb_request_check()).
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit a54636751bef17ad6bbde266ab1d35ad0ad36c0d
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Feb 23 12:26:13 2014 +0100

    client: Add c.blob property
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 91cc8519b54ae8074ee00f8e2441a7e47a1b129c
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Feb 23 12:19:26 2014 +0100

    wibox.drawable: Cache the wallpaper
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit c6365fa2f6ca3c99555b8b2dfe1276c21b04d230
Author: Björn Åström <bjoast@gmail.com>
Date:   Sun Feb 23 00:02:57 2014 +0100

    drawable: Support for true transparency (FS#1210)
    
    This makes the drawable paint the wallpaper in the background
    (i.e. pseudo transparency) only if there is not a composite manager running,
    as reported by the value of awesome.composite_manager_running.
    
    In other words: drawables can now make use of true transparency.
    
    Signed-off-by: Björn Åström <bjoast@gmail.com>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 360e1a5f92bdb1a2fcfb24af3ad2a4f7d26498ae
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Feb 23 12:14:50 2014 +0100

    Add awesome.composite_manager_running
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 019f55a1daabb4b15632f3b49aceaa03a2b93c89
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Feb 22 16:35:17 2014 +0100

    naughty: fix ldoc
    
    lib/naughty.lua:65: ?: 'class' cannot have multiple values; {table,table}
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit b8c172a2dcd9e58c624cb4a7ad583debaa7b3b0a
Author: Massimiliano Brocchini <massimiliano.brocchini@gmail.com>
Date:   Sat Feb 22 12:24:59 2014 +0100

    prompt: search in prompt history using exact string match
    
    The default value for the second argument to :find() is 1, so nothing is changed
    here. The third arguments disables pattern matching and instead gets us literal
    interpretation of strings. This means that pattern characters like e.g. [, ] and
    . don't get interpreted.
    
    Signed-off-by: Massimiliano Brocchini <massimiliano.brocchini@gmail.com>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 77a2b2742658d8ab18abebbc7ee33324fa6871ae
Author: Massimiliano Brocchini <massimiliano.brocchini@gmail.com>
Date:   Sat Feb 22 12:21:09 2014 +0100

    prompt: fix search term ctrl+up/ctrl+down when starting from existing entries
    
    Signed-off-by: Massimiliano Brocchini <massimiliano.brocchini@gmail.com>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 94a8c725968535fd74fe399846f193ecc6ce4c29
Author: Fabienne Ducroquet <fabiduc@gmail.com>
Date:   Sat Jan 18 16:12:30 2014 +0100

    layouts: spiral: Avoid gaps between windows
    
    When an area is split in two, for example horizontally, one of the windows
    should have height math.floor(previous height / 2) and the other
    math.ceil(previous height / 2), to be certain that no gaps are left between the
    windows.
    
    For instance, if the first window has height h and the second window has height
    math.floor(h / 2), the height of the third window should be math.ceil(h / 2)
    instead of the same as for the second window.
    
    So to compute the size of window n + 1 it’s necessary to remember the size of
    window n - 1 as well as that of window n.
    
    Signed-off-by: Fabienne Ducroquet <fabiduc@gmail.com>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 7adc21e2ca97e51f249cbcaaeb53da0fee96a506
Author: Rocco Aliberti <raliberti84@gmail.com>
Date:   Wed Jan 15 23:47:50 2014 +0100

    wibox.layout.margin: Add margins color parameter
    
    This adds a :set_color() method so that the margin layout can color the margins,
    drawing a bordered widget.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 64dc578efce8e35beb7e74aed0184f5302a0dc80
Author: Rocco Aliberti <raliberti84@gmail.com>
Date:   Mon Jan 13 14:38:23 2014 +0100

    awful.menu.clients: Remove useless line (FS#1200)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 843a36aa6e7fdb5e1e76fbb9879328c92adc77f7
Author: Rocco Aliberti <raliberti84@gmail.com>
Date:   Fri Jan 3 16:06:13 2014 +0100

    awesomerc: Fix set menu clients width (FS#1200)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 479f7b990cf411bc116f728eea8edc0ea6b4b8d3
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Jan 11 21:23:23 2014 +0100

    awful.menu.clients: Fix API (FS#1200)
    
    This gets rid of the unused first argument and adds a new second argument that
    can influence individual items.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 56c57979056ec23cbd4982f3b81f6d80895fbe46
Author: Uli Schlachter <psychon@znc.in>
Date:   Fri Jan 3 16:51:16 2014 +0100

    Finish C-side support for window shapes (FS#1051)
    
    A drawin's and a client's bounding and clip shape can now be queried and is
    returned as a cairo surface.  Also, a client window's shape (e.g. xeyes setting
    its own shape) can be queried via c.shape_client_bounding and
    c.shape_client_clip.  All of these properties now emit signals when changed.
    
    (This also silently fixes a bug in luaA_drawin_set_shape_bounding() which forgot
    to include the drawin's border in its size calculation)
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 5cd8c7e540c91b575581c7958ec82903bb646058
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Dec 30 11:33:09 2013 +0100

    awful.tag.viewmore: Make screen optional (FS#1203)
    
    The documentation says that screen, the last argument to viewmore(), is an
    optional argument. However, the implementation only treated it as an optional
    argument in one place.
    
    Fix this by always setting the screen variable itself to a screen.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit aa51379be0a9317a5549034bc9be149f41ad9201
Author: Uli Schlachter <psychon@znc.in>
Date:   Sun Dec 29 15:10:31 2013 +0100

    menubar: Fix API docs
    
    ldoc wants documentation comments to start with "---", not just "--".
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 2936f63d674b15bd8d43ef48e32c9487925df4b1
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Dec 26 16:13:01 2013 +0100

    awful.menu: Add missing "local" declaration
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 77e92e17a1ec1711233f42560b5b339944ce71b2
Author: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
Date:   Thu Dec 26 15:50:10 2013 +0100

    menu: do not double escape name in 'menu:clients()' (FS#1202)
    
    Label of menu entries will be escaped automatically.  Doing it manually
    in menu:clients() will escape it it twice.
    
    Patch removes the util.escape() call in menu:clients()
    
    Signed-off-by: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 9723f23f26c602f38a62ca8e537a3854e7030e57
Author: Jan Larres <jan@majutsushi.net>
Date:   Sat Nov 30 18:23:28 2013 +1300

    taglist: Add [bg|fg]_empty
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit d4b12bb1b2b8365d7c1b9be365dc5843303ba828
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Nov 23 14:54:13 2013 +0100

    awful.tag.delete: Deactivate tags
    
    The activated property was added to tag objects between awesome 3.4 and 3.5.
    This is used in the C code to keep tags alive even when nothing else refers to
    it and includes a tag e.g. in some root window properties.
    
    Thus, to get rid of a tag and to make the C code drop its reference to it, we
    have to set activated to false in this function.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 389a54e356f700a4f2a621e05dbdbafab4a3a03a
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Nov 23 14:42:56 2013 +0100

    Really ignore loops in transient_for (FS#1124)
    
    The code in property_update_wm_transient_for() looked at the transient_for
    relation before the new transient got set. However, the code is supposed to
    check if we get a loop after introducing this new transient_for.
    
    Thus, if we arrive back at the client that we started from, we can be sure that
    there is a cycle. Signal this by setting the loop counter high enough to abort
    the loop and make the rest of this function do nothing.
    
    No idea how I missed this case before nor why I cannot reproduce this on debian,
    but can reproduce it on Arch just fine.
    
    Reported-By: Kasimir Knallkopf at http://article.gmane.org/gmane.comp.window-managers.awesome/10415
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 15f088196699857cdac28250d7a3857fe8b57cee
Author: Uli Schlachter <psychon@znc.in>
Date:   Mon Nov 18 15:19:54 2013 +0100

    tasklist: Add default colors for broken themes
    
    In case loading the theme failed and we don't have fg_normal or bg_normal, add
    default values for these properties. All the other colors are only used if they
    are defined, but these two always need to be defined.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 6a669a87754241a27c8d06495acf66abe80d0248
Author: Uli Schlachter <psychon@znc.in>
Date:   Sat Nov 16 11:28:27 2013 +0100

    Print libxcb error codes for broken connections
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 80aa6b192285514a7e1eff21f9404b6cbdd3a107
Author: heithe <heithe01@gmail.com>
Date:   Sun Nov 3 00:02:09 2013 +0100

    Add awful.titlebar.widget.minimizebutton
    
    Signed-off-by: heithe <heithe01@gmail.com>
    Signed-off-by: Uli Schlachter <psychon@znc.in>

commit 29ecc6095f6f566757d17538635eb2b7674ed96f
Author: Uli Schlachter <psychon@znc.in>
Date:   Thu Oct 31 10:31:54 2013 +0100

    luadoc: Document screen outputs
    
    This was introduced in 2009, commits 9393b2d1 and c08b9034.
    
    Signed-off-by: Uli Schlachter <psychon@znc.in>
